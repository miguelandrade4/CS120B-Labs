
mandr024_lab1_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000014e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001a2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000828  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078b  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a8  00000000  00000000  000011e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001490  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f9  00000000  00000000  000014c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  000018bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001905  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	57 c0       	rjmp	.+174    	; 0x14a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

#include <avr/io.h>


int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	1f 92       	push	r1
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
		unsigned char tempA;
    /* Replace with your application code */
    while (1) 
    {
		tempA = (PINA & 0x0F);
  a8:	80 e2       	ldi	r24, 0x20	; 32
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	fc 01       	movw	r30, r24
  ae:	80 81       	ld	r24, Z
  b0:	8f 70       	andi	r24, 0x0F	; 15
  b2:	89 83       	std	Y+1, r24	; 0x01
		
		if ((tempA == 0x01) || (tempA == 0x02) || (tempA == 0x04) || (tempA == 0x08))
  b4:	89 81       	ldd	r24, Y+1	; 0x01
  b6:	81 30       	cpi	r24, 0x01	; 1
  b8:	49 f0       	breq	.+18     	; 0xcc <main+0x2e>
  ba:	89 81       	ldd	r24, Y+1	; 0x01
  bc:	82 30       	cpi	r24, 0x02	; 2
  be:	31 f0       	breq	.+12     	; 0xcc <main+0x2e>
  c0:	89 81       	ldd	r24, Y+1	; 0x01
  c2:	84 30       	cpi	r24, 0x04	; 4
  c4:	19 f0       	breq	.+6      	; 0xcc <main+0x2e>
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	88 30       	cpi	r24, 0x08	; 8
  ca:	31 f4       	brne	.+12     	; 0xd8 <main+0x3a>
		{
			PORTC = 0x03;
  cc:	88 e2       	ldi	r24, 0x28	; 40
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	23 e0       	ldi	r18, 0x03	; 3
  d2:	fc 01       	movw	r30, r24
  d4:	20 83       	st	Z, r18
  d6:	38 c0       	rjmp	.+112    	; 0x148 <main+0xaa>
		}
		else if((tempA == 0x03) || (tempA == 0x05) || (tempA == 0x06) || (tempA == 0x09) || (tempA == 0x0A) || (tempA == 0x0C))
  d8:	89 81       	ldd	r24, Y+1	; 0x01
  da:	83 30       	cpi	r24, 0x03	; 3
  dc:	79 f0       	breq	.+30     	; 0xfc <main+0x5e>
  de:	89 81       	ldd	r24, Y+1	; 0x01
  e0:	85 30       	cpi	r24, 0x05	; 5
  e2:	61 f0       	breq	.+24     	; 0xfc <main+0x5e>
  e4:	89 81       	ldd	r24, Y+1	; 0x01
  e6:	86 30       	cpi	r24, 0x06	; 6
  e8:	49 f0       	breq	.+18     	; 0xfc <main+0x5e>
  ea:	89 81       	ldd	r24, Y+1	; 0x01
  ec:	89 30       	cpi	r24, 0x09	; 9
  ee:	31 f0       	breq	.+12     	; 0xfc <main+0x5e>
  f0:	89 81       	ldd	r24, Y+1	; 0x01
  f2:	8a 30       	cpi	r24, 0x0A	; 10
  f4:	19 f0       	breq	.+6      	; 0xfc <main+0x5e>
  f6:	89 81       	ldd	r24, Y+1	; 0x01
  f8:	8c 30       	cpi	r24, 0x0C	; 12
  fa:	31 f4       	brne	.+12     	; 0x108 <main+0x6a>
		{
			PORTC = 0x02;
  fc:	88 e2       	ldi	r24, 0x28	; 40
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	22 e0       	ldi	r18, 0x02	; 2
 102:	fc 01       	movw	r30, r24
 104:	20 83       	st	Z, r18
 106:	20 c0       	rjmp	.+64     	; 0x148 <main+0xaa>
		}
		else if((tempA == 0x07) || (tempA == 0x0B) || (tempA == 0x0D) || (tempA == 0x0E))
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	87 30       	cpi	r24, 0x07	; 7
 10c:	49 f0       	breq	.+18     	; 0x120 <main+0x82>
 10e:	89 81       	ldd	r24, Y+1	; 0x01
 110:	8b 30       	cpi	r24, 0x0B	; 11
 112:	31 f0       	breq	.+12     	; 0x120 <main+0x82>
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	8d 30       	cpi	r24, 0x0D	; 13
 118:	19 f0       	breq	.+6      	; 0x120 <main+0x82>
 11a:	89 81       	ldd	r24, Y+1	; 0x01
 11c:	8e 30       	cpi	r24, 0x0E	; 14
 11e:	31 f4       	brne	.+12     	; 0x12c <main+0x8e>
		{
			PORTC = 0x01;
 120:	88 e2       	ldi	r24, 0x28	; 40
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	21 e0       	ldi	r18, 0x01	; 1
 126:	fc 01       	movw	r30, r24
 128:	20 83       	st	Z, r18
 12a:	0e c0       	rjmp	.+28     	; 0x148 <main+0xaa>
		}
		else if((tempA == 0x0F))
 12c:	89 81       	ldd	r24, Y+1	; 0x01
 12e:	8f 30       	cpi	r24, 0x0F	; 15
 130:	31 f4       	brne	.+12     	; 0x13e <main+0xa0>
		{
			PORTC = 0x80;
 132:	88 e2       	ldi	r24, 0x28	; 40
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	20 e8       	ldi	r18, 0x80	; 128
 138:	fc 01       	movw	r30, r24
 13a:	20 83       	st	Z, r18
 13c:	b5 cf       	rjmp	.-150    	; 0xa8 <main+0xa>
		}
		else
		{
			PORTC = 0x04;
 13e:	88 e2       	ldi	r24, 0x28	; 40
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	24 e0       	ldi	r18, 0x04	; 4
 144:	fc 01       	movw	r30, r24
 146:	20 83       	st	Z, r18
		}
    }
 148:	af cf       	rjmp	.-162    	; 0xa8 <main+0xa>

0000014a <_exit>:
 14a:	f8 94       	cli

0000014c <__stop_program>:
 14c:	ff cf       	rjmp	.-2      	; 0x14c <__stop_program>
